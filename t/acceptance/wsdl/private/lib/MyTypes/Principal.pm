package MyTypes::Principal;
use strict;
use warnings;


our $XML_ATTRIBUTE_CLASS = 'MyTypes::Principal::_Principal::XmlAttr';

sub __get_attr_class {
    return $XML_ATTRIBUTE_CLASS;
}

use base qw(
    SOAP::WSDL::XSD::Typelib::ComplexType
    SOAP::WSDL::XSD::Typelib::Builtin::string
);

package MyTypes::Principal::_Principal::XmlAttr;
use base qw(SOAP::WSDL::XSD::Typelib::AttributeSet);

{ # BLOCK to scope variables

my %Type_of :ATTR(:get<Type>);

__PACKAGE__->_factory(
    [ qw(
        Type
    ) ],
    {

        Type => \%Type_of,
    },
    {
        Type => 'MyTypes::PrincipalType',
    }
);

} # end BLOCK



1;


=pod

=head1 NAME

MyTypes::Principal

=head1 DESCRIPTION

Perl data type class for the XML Schema defined complexType
Principal from the namespace http://tempuri2.org/.






=head2 PROPERTIES

The following properties may be accessed using get_PROPERTY / set_PROPERTY
methods:

=over



=back


=head1 METHODS

=head2 new

Constructor. The following data structure may be passed to new():

 { value => $some_value },



=head2 attr

NOTE: Attribute documentation is experimental, and may be inaccurate.
See the correspondent WSDL/XML Schema if in question.

This class has additional attributes, accessibly via the C<attr()> method.

attr() returns an object of the class MyTypes::Principal::_Principal::XmlAttr.

The following attributes can be accessed on this object via the corresponding
get_/set_ methods:

=over

=item * Type



This attribute is of type L<MyTypes::PrincipalType|MyTypes::PrincipalType>.


=back




=head1 AUTHOR

Generated by SOAP::WSDL

=cut

